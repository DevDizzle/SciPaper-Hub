name: Deploy job

on:
  push:
    branches:
      - main
    paths:
      - 'pipelines/**'
      - 'common/**'
      - 'requirements.txt'
      - 'Dockerfile'

jobs:
  deploy:
    name: Build and deploy job
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_WIF_SERVICE_ACCOUNT }}

      - name: Set up gcloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: paperrec-ai

      - name: Install test dependencies
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-cov pandera

      - name: Run tests with coverage
        run: |
          pytest --cov=. --cov-report=term-missing --cov-fail-under=70

      - name: Build and push container image
        run: |
          gcloud auth configure-docker us-central1-docker.pkg.dev --quiet
          docker build --tag us-central1-docker.pkg.dev/paperrec-ai/containers/paperrec-search:${{ github.sha }} .
          docker push us-central1-docker.pkg.dev/paperrec-ai/containers/paperrec-search:${{ github.sha }}

      - name: Create or update Cloud Run job
        run: |
          set -euo pipefail
          IMAGE="us-central1-docker.pkg.dev/paperrec-ai/containers/paperrec-search:${GITHUB_SHA}"
          JOB="paperrec-search-harvest"
          REGION="us-central1"
          ENV_VARS="PROJECT_ID=paperrec-ai,REGION=us-central1,DATA_BUCKET=paperrec-ai-paperrec-data,VECTOR_COLLECTION_ID=papers-v1,INDEX_ENDPOINT_ID=3967620694178529280,DEPLOYED_INDEX_ID=papers_v1_deployed"
          
          CMD_ARGS=("-m" "pipelines.harvest" "--mode" "incremental" "--categories" "cs.AI cs.LG cs.CL cs.RO cs.CV" "--start_offset_days" "1")
          
          # Convert the array to a comma-separated string for the --args flag.
          # The gcloud CLI expects a single string for the --args flag, 
          # with arguments separated by commas.
          IFS=','
          ARGS_STR="${CMD_ARGS[*]}"
          unset IFS

          if gcloud run jobs describe "${JOB}" --region "${REGION}" >/dev/null 2>&1; then
            gcloud run jobs update "${JOB}" \
              --image "${IMAGE}" \
              --region "${REGION}" \
              --tasks 1 \
              --max-retries 1 \
              --set-env-vars "${ENV_VARS}" \
              --command python \
              --args="${ARGS_STR}"
          else
            gcloud run jobs create "${JOB}" \
              --image "${IMAGE}" \
              --region "${REGION}" \
              --tasks 1 \
              --max-retries 1 \
              --set-env-vars "${ENV_VARS}" \
              --command python \
              --args="${ARGS_STR}"
          fi
